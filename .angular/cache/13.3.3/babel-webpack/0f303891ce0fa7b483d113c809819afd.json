{"ast":null,"code":"import * as _ from 'lodash';\nexport class Job {\n  constructor(company, // public image: string,\n  period, position, description, paragraphsToShow) {\n    this.company = company;\n    this.period = period;\n    this.position = position;\n    this.description = description;\n    this.paragraphsToShow = paragraphsToShow;\n    this.endPTag = '</p>';\n    this.startPTag = '<p>';\n    this.expanded = false;\n    this.elastic = this.isShowMore();\n    this.displayedDescription = this.getDescription();\n  }\n\n  expandOrCollapse() {\n    this.expanded = !this.expanded;\n    this.displayedDescription = this.getDescription();\n    return false;\n  }\n\n  isShowMore() {\n    const tokens = this.description.replace(/<\\/p>/g, ' ' + this.endPTag + ' ').replace(/<p>/g, ' ' + this.startPTag + ' ').split(' ');\n    const pTag = this.endPTag;\n\n    const numberOfPararaphs = _.filter(tokens, token => {\n      return token.indexOf(pTag) > -1;\n    }).length;\n\n    return numberOfPararaphs > this.paragraphsToShow;\n  }\n\n  getDescription() {\n    if (!this.isShowMore()) {\n      return this.description;\n    } else if (this.expanded) {\n      return this.description;\n    } else {\n      return this.condensedDescription();\n    }\n  }\n\n  condensedDescription() {\n    let paragraphCount = 0;\n    let condensedDescription = '';\n    let paragraphsToShow = this.paragraphsToShow;\n    let pTag = this.endPTag;\n    const tokens = this.description.replace(/<\\/p>/g, ' ' + this.endPTag + ' ').replace(/<p>/g, ' ' + this.startPTag + ' ').split(' ');\n\n    _.each(tokens, token => {\n      if (paragraphCount < paragraphsToShow) {\n        if (token === pTag) {\n          paragraphCount = paragraphCount + 1;\n        }\n\n        condensedDescription = condensedDescription + ' ' + token;\n      }\n    });\n\n    return condensedDescription;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}